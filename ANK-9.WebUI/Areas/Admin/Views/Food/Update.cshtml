@model FoodUpdateVM

@{
    ViewData["Title"] = "Update";
}

<h1>Update</h1>

@{
    if (ViewData["Errors"] != null)
    {
        <h4>@ViewData["Errors"].ToString()</h4>
    }
}

<h4>FoodUpdateVM</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Update">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="FoodName" class="control-label"></label>
                <input asp-for="FoodName" class="form-control" />
                <span asp-validation-for="FoodName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Calorie" class="control-label"></label>
                <input asp-for="Calorie" class="form-control" />
                <span asp-validation-for="Calorie" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CategoryId" class="control-label"></label>
                @Html.DropDownListFor(x=>x.CategoryId, (List<SelectListItem>)ViewBag.categoryList, new{@class="form-control"})
                @*<input asp-for="CategoryId" class="form-control" />
                <span asp-validation-for="CategoryId" class="text-danger"></span>*@
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
